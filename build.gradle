import org.codehaus.groovy.runtime.GStringImpl

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2' // for shadowing
}

group = properties['group']
version = properties['version']

java.sourceCompatibility = JavaVersion.VERSION_11
java.targetCompatibility = JavaVersion.VERSION_11

ext {
    pluginMain = properties['plugin.main'] == 'default' ?
            "${project.group}.${project.name.toLowerCase()}.${project.name}" :
            properties['plugin.main']
}

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
    maven {
        name = "placeholderapi"
        url = "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
//    compileOnly "org.spigotmc:spigot-api:1.20.4-R0.1-SNAPSHOT"

    compileOnly (files("impl/paper-api.jar"))

    annotationProcessor(shadow(implementation("com.github.Streamline-Essentials:BukkitOfUtils:master-SNAPSHOT")))

    implementation "com.github.hamza-cskn.obliviate-invs:core:4.3.0"

    implementation "net.kyori:adventure-api:4.16.0"
    implementation "net.kyori:adventure-text-serializer-gson:4.16.0"
    implementation "net.kyori:adventure-text-serializer-legacy:4.16.0"
    implementation "net.kyori:adventure-text-serializer-plain:4.16.0"
    implementation "net.kyori:adventure-text-minimessage:4.16.0"
    implementation "net.kyori:adventure-text-serializer-ansi:4.16.0"
    implementation "net.kyori:ansi:1.0.3"

    compileOnly "me.clip:placeholderapi:2.11.5"
}

processResources {
    // Debugging: Print values
    doFirst {
        println "Version: ${project.version}, Name: ${project.name}, Main: ${project.ext.pluginMain}"
    }

    inputs.property('name', "${project.name}")
    inputs.property('version', "${project.version}")
    inputs.property('main', "${project.ext.pluginMain}")

    filesMatching('**/plugin.yml') {
        expand (
                'name': "${project.name}",
                'version': "${project.version}",
                'main': "${project.ext.pluginMain}",
        )
    }
}

shadowJar {
    archiveClassifier.set('')

    buildDir = "target/"
    archiveFileName = "${project.name}-${project.version}.jar"

    minimize()
}

artifacts {
    archives shadowJar
}